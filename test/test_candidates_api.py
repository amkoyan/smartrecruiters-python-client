# coding: utf-8

"""
    Unofficial python library for the SmartRecruiters API

    The SmartRecruiters API provides a platform to integrate services or applications, build apps and create fully customizable career sites. It exposes SmartRecruiters functionality and allows to connect and build software enhancing it.

    OpenAPI spec version: 1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import os
import sys
import unittest

import smartrecruiters_python_client
from smartrecruiters_python_client.rest import ApiException
from smartrecruiters_python_client.apis.candidates_api import CandidatesApi


class TestCandidatesApi(unittest.TestCase):
    """ CandidatesApi unit test stubs """

    def setUp(self):
        self.api = smartrecruiters_python_client.apis.candidates_api.CandidatesApi()

    def tearDown(self):
        pass

    def test_candidates_add(self):
        """
        Test case for candidates_add

        Create a new candidate and assign to a Talent Pool
        """
        pass

    def test_candidates_add_to_job(self):
        """
        Test case for candidates_add_to_job

        Create a new candidate and assign to a job
        """
        pass

    def test_candidates_all(self):
        """
        Test case for candidates_all

        Search candidates
        """
        pass

    def test_candidates_attachments_add(self):
        """
        Test case for candidates_attachments_add

        Attach files to a candidate.
        """
        pass

    def test_candidates_attachments_get(self):
        """
        Test case for candidates_attachments_get

        Get a candidate's attachment.
        """
        pass

    def test_candidates_attachments_list(self):
        """
        Test case for candidates_attachments_list

        Get list candidate's attachments.
        """
        pass

    def test_candidates_delete(self):
        """
        Test case for candidates_delete

        Delete Candidate
        """
        pass

    def test_candidates_get(self):
        """
        Test case for candidates_get

        Get details of a candidate
        """
        pass

    def test_candidates_onboarding_get(self):
        """
        Test case for candidates_onboarding_get

        Get Onboarding Status for a candidate
        """
        pass

    def test_candidates_onboarding_get_for_job(self):
        """
        Test case for candidates_onboarding_get_for_job

        Get Onboarding Status for a candidate associated with given job
        """
        pass

    def test_candidates_onboarding_update(self):
        """
        Test case for candidates_onboarding_update

        Set Onboarding Status for a candidate
        """
        pass

    def test_candidates_onboarding_update_for_job(self):
        """
        Test case for candidates_onboarding_update_for_job

        Sets Onboarding Status for a candidate associated with given job
        """
        pass

    def test_candidates_properties_get(self):
        """
        Test case for candidates_properties_get

        Get candidate property values for a candidate
        """
        pass

    def test_candidates_properties_get_for_job(self):
        """
        Test case for candidates_properties_get_for_job

        Get candidate property values for a candidate's job
        """
        pass

    def test_candidates_properties_values_update(self):
        """
        Test case for candidates_properties_values_update

        Add/update candidate property value
        """
        pass

    def test_candidates_properties_values_update_for_job(self):
        """
        Test case for candidates_properties_values_update_for_job

        Add/update candidate property value
        """
        pass

    def test_candidates_resume_add(self):
        """
        Test case for candidates_resume_add

        Parse a resume, create a candidate and assign to a Talent Pool.
        """
        pass

    def test_candidates_resume_add_to_job(self):
        """
        Test case for candidates_resume_add_to_job

        Parse a resume, create a candidate and assign to a job.
        """
        pass

    def test_candidates_screening_answers_get(self):
        """
        Test case for candidates_screening_answers_get

        Get candidate screening answers for a candidate's job
        """
        pass

    def test_candidates_source_update(self):
        """
        Test case for candidates_source_update

        Update a candidate's source
        """
        pass

    def test_candidates_status_history_get(self):
        """
        Test case for candidates_status_history_get

        Get candidate's status history
        """
        pass

    def test_candidates_status_update(self):
        """
        Test case for candidates_status_update

        Update a candidate's status
        """
        pass

    def test_candidates_status_update_primary(self):
        """
        Test case for candidates_status_update_primary

        Update a candidate's status on primary assignment
        """
        pass

    def test_candidates_tags_add(self):
        """
        Test case for candidates_tags_add

        Add tags to a candidate
        """
        pass

    def test_candidates_tags_delete(self):
        """
        Test case for candidates_tags_delete

        Delete tags for a candidate
        """
        pass

    def test_candidates_tags_get(self):
        """
        Test case for candidates_tags_get

        Get tags for a candidate
        """
        pass

    def test_candidates_tags_replace(self):
        """
        Test case for candidates_tags_replace

        Update tags for a candidate
        """
        pass

    def test_candidates_update(self):
        """
        Test case for candidates_update

        Update candidate personal information
        """
        pass


if __name__ == '__main__':
    unittest.main()
